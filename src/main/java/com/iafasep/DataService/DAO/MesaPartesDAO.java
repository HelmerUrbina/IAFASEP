package com.iafasep.DataService.DAO;

import com.iafasep.BusinessServices.Beans.BeanMesaPartes;
import java.sql.Date;
import java.util.List;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

/**
 *
 *  @author MERCANTIL GROUP SAC
 */
@Repository
public interface MesaPartesDAO extends JpaRepository<BeanMesaPartes, String> {

    @Query(nativeQuery = true, value = "SELECT CMESA_PARTE_TIPO, CPERIODO_CODIGO, CMES_CODIGO,  "
            + "LPAD(NMESA_PARTE_CODIGO,5,0) AS NMESA_PARTE_CODIGO, "
            + "PK_UTIL.FUN_INSTITUCION_NOMBRE(NINSTITUCION_CODIGO) AS NINSTITUCION_CODIGO, NTIPO_DOCUMENTO_CODIGO, "
            + "UPPER(PK_UTIL.FUN_TIPO_DOCUMENTO_NOMBRE(NTIPO_DOCUMENTO_CODIGO)||'-'||VMESA_PARTE_NUMERO) AS VMESA_PARTE_NUMERO, "
            + "NCLASIFICACION_DOCUMENTO_CODIG, PK_UTIL.FUN_ESTADO_DESCRIPCION(CESTADO_CODIGO) AS CESTADO_CODIGO, "
            + "UPPER(VMESA_PARTE_ASUNTO) AS VMESA_PARTE_ASUNTO, UPPER(VMESA_PARTE_POST_FIRMA) AS VMESA_PARTE_POST_FIRMA, "
            + "VMESA_PARTE_CORREO, UPPER(VMESA_PARTE_DIGITAL) AS VMESA_PARTE_DIGITAL, TO_CHAR(DMESA_PARTE_FECHA,'YYYY/MM/DD') DMESA_PARTE_FECHA, "
            + "TO_CHAR(DMESA_PARTE_RECEPCION,'DD/MM/YYYY HH12:MI:SS AM') AS DMESA_PARTE_RECEPCION, PK_UTIL.FUN_PRIORIDAD_NOMBRE(NPRIORIDAD_CODIGO) AS NPRIORIDAD_CODIGO, "
            + "NMESA_PARTE_LEGAJOS AS NMESA_PARTE_LEGAJOS, NMESA_PARTE_FOLIOS AS NMESA_PARTE_FOLIOS, VMESA_PARTE_ANULACION "
            + "FROM IAFAS_MESA_PARTES WHERE "
            + "CMESA_PARTE_TIPO=? AND "
            + "CPERIODO_CODIGO=? AND "
            + "CMES_CODIGO=? AND "
            + "TO_CHAR(DMESA_PARTE_RECEPCION,'DD')=LPAD(?,2,0) AND "
            + "CESTADO_CODIGO NOT IN ('AN') "
            + "ORDER BY NMESA_PARTE_CODIGO DESC")
    public List<BeanMesaPartes> findByTipoAndPeriodoAndMesAndDia(String tipo, String periodo, String mes, String codigo);

    @Query(nativeQuery = true, value = "SELECT CMESA_PARTE_TIPO, CPERIODO_CODIGO, CMES_CODIGO,  "
            + "LPAD(NMESA_PARTE_CODIGO,5,0) AS NMESA_PARTE_CODIGO, "
            + "PK_UTIL.FUN_INSTITUCION_NOMBRE(NINSTITUCION_CODIGO) AS NINSTITUCION_CODIGO, NTIPO_DOCUMENTO_CODIGO, "
            + "UPPER(PK_UTIL.FUN_TIPO_DOCUMENTO_NOMBRE(NTIPO_DOCUMENTO_CODIGO)||'-'||VMESA_PARTE_NUMERO) AS VMESA_PARTE_NUMERO, "
            + "NCLASIFICACION_DOCUMENTO_CODIG, CESTADO_CODIGO, "
            + "UPPER(VMESA_PARTE_ASUNTO) AS VMESA_PARTE_ASUNTO, UPPER(VMESA_PARTE_POST_FIRMA) AS VMESA_PARTE_POST_FIRMA, "
            + "VMESA_PARTE_CORREO, UPPER(VMESA_PARTE_DIGITAL) AS VMESA_PARTE_DIGITAL, TO_CHAR(DMESA_PARTE_FECHA,'YYYY/MM/DD') DMESA_PARTE_FECHA, "
            + "TO_CHAR(DMESA_PARTE_RECEPCION,'DD/MM/YYYY') AS DMESA_PARTE_RECEPCION, NPRIORIDAD_CODIGO, "
            + "NMESA_PARTE_LEGAJOS AS NMESA_PARTE_LEGAJOS, NMESA_PARTE_FOLIOS AS NMESA_PARTE_FOLIOS, VMESA_PARTE_ANULACION "
            + "FROM IAFAS_MESA_PARTES WHERE "
            + "CMESA_PARTE_TIPO=? AND "
            + "CPERIODO_CODIGO=? AND "
            + "CMES_CODIGO=? AND "
            + "CESTADO_CODIGO=? "
            + "ORDER BY NMESA_PARTE_CODIGO DESC")
    public List<BeanMesaPartes> findByTipoAndPeriodoAndMesAndEstado(String tipo, String periodo, String mes, String codigo);

    @Query(nativeQuery = true, value = "SELECT CMESA_PARTE_TIPO, CPERIODO_CODIGO, CMES_CODIGO,  "
            + "LPAD(NMESA_PARTE_CODIGO,5,0) AS NMESA_PARTE_CODIGO, "
            + "PK_UTIL.FUN_INSTITUCION_NOMBRE(NINSTITUCION_CODIGO) AS NINSTITUCION_CODIGO, NTIPO_DOCUMENTO_CODIGO, "
            + "UPPER(PK_UTIL.FUN_TIPO_DOCUMENTO_NOMBRE(NTIPO_DOCUMENTO_CODIGO)||'-'||VMESA_PARTE_NUMERO) AS VMESA_PARTE_NUMERO, "
            + "NCLASIFICACION_DOCUMENTO_CODIG, PK_UTIL.FUN_ESTADO_DESCRIPCION(CESTADO_CODIGO) AS CESTADO_CODIGO, "
            + "UPPER(VMESA_PARTE_ASUNTO) AS VMESA_PARTE_ASUNTO, UPPER(VMESA_PARTE_POST_FIRMA) AS VMESA_PARTE_POST_FIRMA, "
            + "VMESA_PARTE_CORREO, UPPER(VMESA_PARTE_DIGITAL) AS VMESA_PARTE_DIGITAL, TO_CHAR(DMESA_PARTE_FECHA,'YYYY/MM/DD') DMESA_PARTE_FECHA, "
            + "TO_CHAR(DMESA_PARTE_RECEPCION,'DD/MM/YYYY HH12:MI:SS AM') AS DMESA_PARTE_RECEPCION, PK_UTIL.FUN_PRIORIDAD_NOMBRE(NPRIORIDAD_CODIGO) AS NPRIORIDAD_CODIGO, "
            + "NMESA_PARTE_LEGAJOS AS NMESA_PARTE_LEGAJOS, NMESA_PARTE_FOLIOS AS NMESA_PARTE_FOLIOS, VMESA_PARTE_ANULACION "
            + "FROM IAFAS_MESA_PARTES WHERE "
            + "CMESA_PARTE_TIPO=? AND "
            + "CPERIODO_CODIGO=? AND "
            + "CMES_CODIGO LIKE ? AND "
            + "CESTADO_CODIGO NOT IN ('AN') "
            + "ORDER BY NMESA_PARTE_CODIGO DESC")
    public List<BeanMesaPartes> findByTipoAndPeriodoAndMes(String tipo, String periodo, String mes);

    @Query(nativeQuery = true, value = "SELECT IAFAS_MESA_PARTES.CMESA_PARTE_TIPO, IAFAS_MESA_PARTES.CPERIODO_CODIGO, "
            + "LPAD(IAFAS_MESA_PARTES.NMESA_PARTE_CODIGO,5,0) AS NMESA_PARTE_CODIGO, IAFAS_MESA_PARTES_DECRETOS.NMESA_PARTE_DECRETO_CODIGO CMES_CODIGO, "
            + "PK_UTIL.FUN_INSTITUCION_NOMBRE(IAFAS_MESA_PARTES.NINSTITUCION_CODIGO) AS NINSTITUCION_CODIGO, IAFAS_MESA_PARTES.NTIPO_DOCUMENTO_CODIGO, "
            + "UPPER(PK_UTIL.FUN_TIPO_DOCUMENTO_NOMBRE(IAFAS_MESA_PARTES.NTIPO_DOCUMENTO_CODIGO)||'-'||IAFAS_MESA_PARTES.VMESA_PARTE_NUMERO) AS VMESA_PARTE_NUMERO, "
            + "NCLASIFICACION_DOCUMENTO_CODIG, PK_UTIL.FUN_ESTADO_DESCRIPCION(IAFAS_MESA_PARTES_DECRETOS_USU.CESTADO_CODIGO) AS CESTADO_CODIGO, "
            + "UPPER(IAFAS_MESA_PARTES.VMESA_PARTE_ASUNTO) AS VMESA_PARTE_ASUNTO, UPPER(IAFAS_MESA_PARTES.VMESA_PARTE_POST_FIRMA) AS VMESA_PARTE_POST_FIRMA, "
            + "VMESA_PARTE_CORREO, UPPER(IAFAS_MESA_PARTES.VMESA_PARTE_DIGITAL) AS VMESA_PARTE_DIGITAL, "
            + "TO_CHAR(IAFAS_MESA_PARTES.DMESA_PARTE_FECHA,'YYYY/MM/DD') DMESA_PARTE_FECHA, "
            + "TO_CHAR(IAFAS_MESA_PARTES.DMESA_PARTE_RECEPCION,'DD/MM/YYYY HH12:MI:SS AM') AS DMESA_PARTE_RECEPCION, "
            + "PK_UTIL.FUN_PRIORIDAD_NOMBRE(IAFAS_MESA_PARTES_DECRETOS.NPRIORIDAD_CODIGO) AS NPRIORIDAD_CODIGO, "
            + "IAFAS_MESA_PARTES.NMESA_PARTE_LEGAJOS AS NMESA_PARTE_LEGAJOS, IAFAS_MESA_PARTES.NMESA_PARTE_FOLIOS AS NMESA_PARTE_FOLIOS, "
            + "UPPER(IAFAS_MESA_PARTES_DECRETOS.VMESA_PARTE_DECRETO_DESCRIPCIO) VMESA_PARTE_ANULACION "
            + "FROM IAFAS_MESA_PARTES INNER JOIN IAFAS_MESA_PARTES_DECRETOS ON ( "
            + "IAFAS_MESA_PARTES.CMESA_PARTE_TIPO=IAFAS_MESA_PARTES_DECRETOS.CMESA_PARTE_TIPO AND "
            + "IAFAS_MESA_PARTES.CPERIODO_CODIGO=IAFAS_MESA_PARTES_DECRETOS.CPERIODO_CODIGO AND "
            + "IAFAS_MESA_PARTES.NMESA_PARTE_CODIGO=IAFAS_MESA_PARTES_DECRETOS.NMESA_PARTE_CODIGO) "
            + "INNER JOIN IAFAS_MESA_PARTES_DECRETOS_USU ON ("
            + "IAFAS_MESA_PARTES_DECRETOS.CMESA_PARTE_TIPO=IAFAS_MESA_PARTES_DECRETOS_USU.CMESA_PARTE_TIPO AND "
            + "IAFAS_MESA_PARTES_DECRETOS.CPERIODO_CODIGO=IAFAS_MESA_PARTES_DECRETOS_USU.CPERIODO_CODIGO AND "
            + "IAFAS_MESA_PARTES_DECRETOS.NMESA_PARTE_CODIGO=IAFAS_MESA_PARTES_DECRETOS_USU.NMESA_PARTE_CODIGO AND "
            + "IAFAS_MESA_PARTES_DECRETOS.NMESA_PARTE_DECRETO_CODIGO=IAFAS_MESA_PARTES_DECRETOS_USU.NMESA_PARTE_DECRETO_CODIGO) WHERE "
            + "IAFAS_MESA_PARTES.CPERIODO_CODIGO=? AND "
            + "IAFAS_MESA_PARTES_DECRETOS_USU.VUSUARIO_RESPONSABLE=? AND "
            + "IAFAS_MESA_PARTES_DECRETOS.CESTADO_CODIGO NOT IN ('AN') "
            + "ORDER BY IAFAS_MESA_PARTES_DECRETOS.CESTADO_CODIGO, IAFAS_MESA_PARTES.NMESA_PARTE_CODIGO DESC")
    public List<BeanMesaPartes> findByTipoAndPeriodoAndUsuarioDecretado(String periodo, String usuario);

    @Query(nativeQuery = true, value = "SELECT CMESA_PARTE_TIPO, CMES_CODIGO,  "
            + "LPAD(NMESA_PARTE_CODIGO,5,0) AS NMESA_PARTE_CODIGO, "
            + "NINSTITUCION_CODIGO, PK_UTIL.FUN_INSTITUCION_NOMBRE(NINSTITUCION_CODIGO) AS CPERIODO_CODIGO, "
            + "NTIPO_DOCUMENTO_CODIGO, VMESA_PARTE_NUMERO, "
            + "NCLASIFICACION_DOCUMENTO_CODIG, CESTADO_CODIGO, "
            + "UPPER(VMESA_PARTE_ASUNTO) AS VMESA_PARTE_ASUNTO, UPPER(VMESA_PARTE_POST_FIRMA) AS VMESA_PARTE_POST_FIRMA, "
            + "VMESA_PARTE_CORREO, UPPER(VMESA_PARTE_DIGITAL) AS VMESA_PARTE_DIGITAL, TO_CHAR(DMESA_PARTE_FECHA,'YYYY/MM/DD') DMESA_PARTE_FECHA, "
            + "TO_CHAR(DMESA_PARTE_RECEPCION,'YYYY/MM/DD') AS DMESA_PARTE_RECEPCION,  NPRIORIDAD_CODIGO, "
            + "NMESA_PARTE_LEGAJOS AS NMESA_PARTE_LEGAJOS, NMESA_PARTE_FOLIOS AS NMESA_PARTE_FOLIOS, VMESA_PARTE_ANULACION "
            + "FROM IAFAS_MESA_PARTES WHERE "
            + "CMESA_PARTE_TIPO=? AND "
            + "CPERIODO_CODIGO=? AND "
            + "NMESA_PARTE_CODIGO=? ")
    public BeanMesaPartes findByTipoAndPeriodoAndCodigo(String tipo, String periodo, String codigo);

    @Query(nativeQuery = true, value = "SELECT "
            + "LPAD(NVL(MAX(NMESA_PARTE_CODIGO), 0)+1,5,0) AS NMESA_PARTE_CODIGO "
            + "FROM IAFAS_MESA_PARTES WHERE "
            + "CMESA_PARTE_TIPO=? AND "
            + "CPERIODO_CODIGO=? ")
    public String getNumeroByTipoAndPeriodo(String tipo, String periodo);

    @Transactional
    @Modifying
    @Query(value = "{CALL SP_IDU_MESA_PARTES(:periodo, :tipo, :numero, :institucion, :prioridad, :tipoDocumento, "
            + ":numeroDocumento, :clasificacion, :fecha, :asunto, :postFirma, :legajo, :folio, :archivo, :usuario, :modo)}", nativeQuery = true)
    void sp_iduMesaPartes(
            @Param("periodo") String periodo,
            @Param("tipo") String tipo,
            @Param("numero") String numero,
            @Param("institucion") String institucion,
            @Param("prioridad") String prioridad,
            @Param("tipoDocumento") String tipoDocumento,
            @Param("numeroDocumento") String numeroDocumento,
            @Param("clasificacion") String clasificacion,
            @Param("fecha") Date fecha,
            @Param("asunto") String asunto,
            @Param("postFirma") String postFirma,
            @Param("legajo") Integer legajo,
            @Param("folio") Integer folio,
            @Param("archivo") String archivo,
            @Param("usuario") String usuario,
            @Param("modo") String modo);
}
